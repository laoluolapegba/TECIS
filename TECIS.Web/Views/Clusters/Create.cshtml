@model TECIS.Data.Models.Cluster
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Create</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Create</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary"})
        </div>
    </div>
</div>

@*<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Add new Contact</h4>
</div>*@
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Create Cluster</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm())
{
                    <div class="modal-body">
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterName, new { @class = "control-label col-md-2" })
                                @*<div class="col-md-6">
                                        @Html.EditorFor(model => model.ClusterName)
                                        @Html.ValidationMessageFor(model => model.ClusterName)
                                    </div>*@
                                @(Html.Kendo().TextBoxFor(model => model.ClusterName)
                                )
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterDesc, new { @class = "control-label col-md-2" })

                                @(Html.Kendo().TextBoxFor(model => model.ClusterDesc).HtmlAttributes(new { style = ".multi-line { height:5em; width:5em; }" })
                                )
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterZone, "ClusterZone", new { @class = "control-label col-md-2" })
                                @*<div class="col-md-6">
                                        @Html.DropDownList("ClusterZone", String.Empty)
                                        @Html.ValidationMessageFor(model => model.ClusterZone)
                                    </div>*@
                                @(Html.Kendo().ComboBox()
          .Name("ClusterZone")
              .Placeholder("Select zone...")
              .DataTextField("ZoneName")
              .DataValueField("ZoneId")
              .Filter(FilterType.Contains)
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeZones", "Clusters");
                  });
              })
                                )
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterArea, "ClusterArea", new { @class = "control-label col-md-2" })
                                @*<div class="col-md-6">
                                        @Html.DropDownList("ClusterArea", String.Empty)
                                        @Html.ValidationMessageFor(model => model.ClusterArea)
                                    </div>*@
                                @(Html.Kendo().ComboBox()
      .Name("ClusterArea")
              .Placeholder("Select area...")
          .DataTextField("AreaName")
          .DataValueField("AreaId")
              .Filter(FilterType.Contains)
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeAreas", "Clusters").Data("filterAreas"); ;
                  }).ServerFiltering(true);
              }).Enable(false)
              .AutoBind(false)
      .CascadeFrom("ClusterZone")
                                )
                                <script>
                function filterAreas() {
                return {
                    zones: $("#ClusterZone").val(),
                    areaFilter: $("#ClusterArea").data("kendoComboBox").input.val()
                };
            }
                                </script>

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterSection, "ClusterSection", new { @class = "control-label col-md-2" })
                                @*<div class="col-md-6">
                                        @Html.DropDownList("ClusterSection", String.Empty)
                                        @Html.ValidationMessageFor(model => model.ClusterSection)
                                    </div>*@
                                @(Html.Kendo().ComboBox()
          .Name("ClusterSection")
              .Placeholder("Select section...")
          .DataTextField("SectionName")
          .DataValueField("SectionId")
              .Filter(FilterType.Contains)
              .DataSource(source => {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeSections", "Clusters")
                          .Data("filterSections");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(false)
          .CascadeFrom("ClusterArea")
                                )
                                <script>
            function filterSections() {
                return {
                    areas: $("#ClusterArea").val(),
                    sectionFilter: $("#ClusterSection").data("kendoComboBox").input.val()
                };
            }
                                </script>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterType, "ClusterType", new { @class = "control-label col-md-2" })
                                @*<div class="col-md-6">
                                        @Html.DropDownList("ClusterType", String.Empty)
                                        @Html.ValidationMessageFor(model => model.ClusterType)
                                    </div>*@
                                @(Html.Kendo().ComboBox()
                .Name("ClusterType")
              .Placeholder("Select Type...")
              .DataTextField("Description")
              .DataValueField("Id")
              .Filter(FilterType.Contains)
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetClusterTypes", "Clusters");
                  });
              })
                                )
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clusterhead, "Leader", htmlAttributes: new { @class = "control-label col-md-2" })

                                @(Html.Kendo().ComboBox()
                                    .Name("clusterhead")
                                    .DataTextField("MemberName")
                                    .DataValueField("MemberId")
                                  .HtmlAttributes(new { style = "width:50%;" })
                                  .Filter("contains")
                                  .AutoBind(false)
                                  .MinLength(2)
                                  .DataSource(source => {
                                      source.Read(read =>
                                      {
                                          read.Action("GetMembers", "Members");
                                      });

                                  })
                                )
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ClusterEmail, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.ClusterEmail)
                                    @Html.ValidationMessageFor(model => model.ClusterEmail)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.status, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.status)
                                    @Html.ValidationMessageFor(model => model.status)
                                </div>
                            </div>
                            <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Save" class="btn btn-primary" />
				@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>

                        </div>
                    </div>
    

}

                    </div>
            </div>
        </div>
    </div>
 </div>

 
