@model IEnumerable<TECIS.Data.Models.AddressLocator>
    @{
        ViewBag.Title = "Member Locator";
    }
@using Jmelosegui.Mvc.GoogleMap
@using TECIS.Data.Models;
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h2>Member Locator</h2>
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li>
                    <a>Clusters</a>
                </li>
                <li class="active">
                    <strong>Member Locator</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-2">

        </div>
    </div>
    @*@foreach (var member in Model)
    {
        <div class="address-loc" data-latitude="@(member.latitude)"
             data-longitude="@(member.longitude)">
            <span>@member.id</span>
            <span>@member.address</span>
        </div>
    }*@

    <div class="wrapper wrapper-content  animated fadeInRight">
        
        <div class="row">
            <div class="col-md-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Members near you</h5>
                    </div>
                    <div class="ibox-content">
                        <p>
                           .
                        </p>
                        <div class="google-map" id="my_map" style="height: 500px"></div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="row">
            <div class="col-md-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Members near you</h5>
                    </div>
                    <div class="ibox-content">
                        <p>
                            Locate a connect group.
                        </p>
                        <div class="google-map" id="map-canvas" style="height: 500px">
                            @{
                                Html.GoogleMap()
                                    .Name("map")

                                    .Height(600)
                                    .Center(c => c.Latitude(6.427803)
                                    .Longitude(3.468176))
                                    .FitToMarkersBounds(true)
                                    .BindTo<AddressLocator, Marker>
                                    (Model, mappings => mappings.For<AddressLocator>
                                        (
                                            binding => binding.ItemDataBound
                                                (
                                                    (marker, regionInfo) =>
                                                    {
                                                        marker.Latitude = regionInfo.latitude;
                                                        marker.Longitude = regionInfo.longitude;
                                                        marker.Title = regionInfo.address;
                                                        marker.ZIndex = regionInfo.id;
                                                        marker.Icon = new MarkerImage(String.Format("~/Images/markers/{0}", regionInfo.itemtype + ".png")
                                                            , new System.Drawing.Size(18, 12)
                                                            , new System.Drawing.Point(0, 0)
                                                            , new System.Drawing.Point(0, 12));
                                                        marker.Window = new InfoWindow(marker)
                                                        {
                                                            Template =
                                                            {
                                                                Content = () => ViewContext.Writer.Write(regionInfo.InfoWindowContent)
                                                            }
                                                        };
                                                    }
                                                )
                                        )
                                    ).Render();
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>*@




    </div>
    @section Styles {
        @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")

    }
    @section Scripts {
@(Html.GoogleMap().ScriptRegistrar())
        <!--
         You need to include this script on any page that has a Google Map.
         When using Google Maps on your own site you MUST signup for your own API key at:
         https://developers.google.com/maps/documentation/javascript/tutorial#api_key
         After your sign up replace the key in the URL below..
        -->
        @Scripts.Render("https://maps.googleapis.com/maps/api/js?key=AIzaSyB3Wv8F-d7pEhOMuFjrfUQlQQYgxtSMtmA")

        <script type="text/javascript">
            // When the window has finished loading google map
            var markers =
                           [
                              {
                                  title: "Olapeju Oluwaseyi",
                                  position: new google.maps.LatLng(6.436019, 3.488352)
                              },
                              {
                                  title: "Olapo Omowunmi",
                                  position: new google.maps.LatLng(6.425870, 3.441060)
                              },
                              {
                                  title: "Itsibor Rapheal ",
                                  position: new google.maps.LatLng(6.430582, 3.443356)
                              },
                              {
                                  title: "Smith Abayomi",
                                  position: new google.maps.LatLng(6.439772, 3.455544)
                              }
                           ];
            function init_map(map_canvas_id, lat, lng, zoomLevel) {
                var myLatLng = new google.maps.LatLng(lat, lng);

                var options = {
                    zoom: zoomLevel,
                    center: myLatLng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                var map_canvas = document.getElementById(map_canvas_id);

                var map = new google.maps.Map(map_canvas, options);

                // Place markers
                var bounds = new google.maps.LatLngBounds();

                for (var i = 0; i < markers.length; i++) {
                    var marker = new google.maps.Marker(markers[i]);
                    marker.setMap(map);

                    bounds.extend(marker.getPosition());
                }

                map.fitBounds(bounds);
                map.setCenter(bounds.getCenter());
            }
            //google.maps.event.addDomListener(window, 'load', init);           
            
            //init_map('my_map', 6.427803, 3.468176, 8);
            var myLatLng = new google.maps.LatLng(6.427803, 3.468176);

            var options = {
                zoom: 8,
                center: myLatLng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var map_canvas = document.getElementById('my_map');

            var map = new google.maps.Map(map_canvas, options);
            var bounds = new google.maps.LatLngBounds();

            @foreach (var item in Model) {
                <text>
                var markerlatLng = new google.maps.LatLng(@(item.latitude), @(item.longitude));
                var title = '@(item.itemname)';
                var description = '@(item.address)';
                var contentString = '<h3>' + title + '</h3>' + '<p>' + description + '</p>'

                var infowindow = new google.maps.InfoWindow({
                    //content: contentString
                });
                var iconBase = '/Images/markers/';
                var marker = new google.maps.Marker({
                    position: markerlatLng,
                    title: title,
                    map: map,
                    draggable: false,
                    animation:  google.maps.Animation.DROP,
                    content: contentString,
                    icon: iconBase + @item.itemtype + '.png'
                });
                marker.setMap(map);
                bounds.extend(marker.getPosition());

                google.maps.event.addListener(marker, 'click', (function (marker) {
                    return function () { 
                        infowindow.setContent(marker.content);
                        infowindow.open(map, marker);
                    }
                })(marker));
            </text>
            }
            map.fitBounds(bounds);
            map.setCenter(bounds.getCenter());

            @*function addMarker(latitude, longitude, title, description, map)
            {
                var latLng = new google.maps.LatLng(latitude, longitude);
                var contentString = '<h3>' + title + '</h3>' + '<p>' + description + '</p>';
                var infowindow = new google.maps.InfoWindow({
                    content: contentString
                });
                var marker = new google.maps.Marker({
                    position: latLng,
                    title: title,
                    map: map,
                    draggable: false
                });
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });
            }
            // Now add markers
            @foreach (var item in Model) {
                @:addMarker(@item.latitude, @item.longitude, '@item.itemid', '@item.address', map);
            }*@
        </script>
    }
