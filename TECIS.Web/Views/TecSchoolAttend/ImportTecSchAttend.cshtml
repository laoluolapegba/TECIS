@model TECIS.Data.Models.SMSObject

@{
    ViewBag.Title = "Import Attendance";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Import Attendance</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Import Attendance</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-9">
        <div class="ibox float-e-margins">

            <div class="ibox-title">
                <h5>Upload <small> data</small></h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="#">Config option 1</a>
                        </li>
                        <li>
                            <a href="#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div>
                        @using (Html.BeginForm("ImportGuests", "Guests", FormMethod.Post, new { enctype = "multipart/form-data", @class = "dropzone" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="dropzone-previews"></div>
                            <button type="submit" name="action:ImportGuests" class="btn btn-primary pull-right">Submit the file</button>
                        }

                        <div>
                            <div class="m text-right">
                                <small>
                                    Instructions: The Data to be uploaded must be in the first workbook.With the first row being the column headers in the following order:
                                    S/N,	SURNAME,	OTHERNAMES,	AGE,	GENDER,	MARITAL STATUS,	PHONE , NUMBER,	EMAIL,	HOME , ADDRESS,	NEAREST BUS STOP ,	CLUSTER AREA ,
                                    OFFICE ADDRESS,	OCCUPATION,	WOULD YOU CONSIDER JOINING ELEVATION CHURCH?,	WOULD YOU LIKE TO RECEIVE MEMBERSHIP INFO?,
                                    WOULD YOU LIKE TO RECEIVE UPDATES ABOUT OUR EVENTS?,	HOW DID YOU GET TO KNOW ABOUT OUR CHURCH?,	PRAYER / SERVICE COMMENTS
                                    </a>
                                </small>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>

</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dropZone")

    <script type="text/javascript">
        $(document).ready(function () {

            Dropzone.options.myAwesomeDropzone = {

                autoProcessQueue: false,
                parallelUploads: 100,
                maxFiles: 100,
                paramName: "files",

                // Dropzone settings
                init: function () {
                    var myDropzone = this;

                    this.element.querySelector("button[type=submit]").addEventListener("click", function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        myDropzone.processQueue();
                    });
                    this.on("sendingmultiple", function () {
                    });
                    this.on("successmultiple", function (files, response) {
                    });
                    this.on("errormultiple", function (files, response) {
                    });
                }

            }

        });
    </script>
}