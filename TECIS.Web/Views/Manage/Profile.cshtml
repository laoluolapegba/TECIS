@using TECIS.Web.Helpers.CrossCutting.Security
@using Microsoft.AspNet.Identity
@using TECIS.Web.Models;
@using TECIS.Data.ViewModels;
@using TECIS.Data.Models;
@model TECIS.Web.Models.IndexViewModel
@{
    ViewBag.Title = "Profile";
}
<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
<p class="text-success">@ViewBag.StatusMessage</p>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Profile </h2>
        <ol class="breadcrumb">
            <li>
                <a href="index.html">Home</a>
            </li>
            <li>
                <a>Account</a>
            </li>
            <li class="active">
                <strong>Profile </strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="tabs-container">
        <p class="text-success">@ViewBag.StatusMessage</p>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#tab-profile"> <i class="fa fa-user"></i> Profile</a></li>
            <li class=""><a data-toggle="tab" href="#tab-alerts"> <i class="fa fa-bell"></i> Alerts</a></li>
            <li class=""><a data-toggle="tab" href="#tab-messages"><i class="fa fa-envelope"></i> Messages</a></li>
            <li class=""><a data-toggle="tab" href="#tab-manage"><i class="fa fa-cog"></i> Account Settings</a></li>
        </ul>
        <div class="tab-content">
            @using (Html.BeginForm("Avatar", "Manage", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div id="tab-profile" class="tab-pane">
                    <div class="panel-body">
                        @if (Request.IsAuthenticated)
                        {
                            //var base64 = Convert.ToBase64String(Model.Avatar);
                            //var imgSrc = String.Format("data:image/jpeg;base64,{0}", base64);
                            //var identity = ((CustomPrincipal)HttpContext.Current.User).CustomIdentity;
                            <div class="row m-b-lg m-t-lg">
                                <div class="col-md-6">

                                    <div class="profile-image">
                                        @*<img src="~/Content/avatar/@(User.Identity.GetUserName()).jpg" class="img-circle circle-border m-b-md" alt="profile">*@

                                        <img src="@Model.Avatar" alt="avatar" />

                                    </div>
                                    <div class="profile-info">
                                        <div class="">
                                            <div>
                                                <h2 class="no-margins">
                                                    <strong class="font-bold">@string.Format("{0} {1}", ViewBag.userfirstname, ViewBag.userlastname) </strong>
                                                   
                                                </h2>
                                                <h4>@ViewBag.Rolenameme</h4>
                                                <small>
                                                    TeamLeader: @ViewBag.TeamLeader
                                                </small>
                                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Update Team Leader", "UpdateTeamLeader", "Manage", htmlAttributes: new { data_modal = "", @class = "btn btn-primary" })


                                            </div>
                                        </div>
                                        <div>
                                            @Html.Label("Avatar")
                                            <div>
                                                <input type="file" id="Avatar" name="upload" />

                                            </div>
                                            <br />
                                            <div>
                                                <input type="submit" value="Upload" class="btn btn-default" />
                                            </div>
                                            
                                        </div>



                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <table class="table small m-b-xs">
                                        <tbody>
                                            <tr>
                                                <td>
                                                    <strong>142</strong> Projects
                                                </td>
                                                <td>
                                                    <strong>22</strong> Followers
                                                </td>

                                            </tr>
                                            <tr>
                                                <td>
                                                    <strong>61</strong> Comments
                                                </td>
                                                <td>
                                                    <strong>54</strong> Articles
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <strong>154</strong> Tags
                                                </td>
                                                <td>
                                                    <strong>32</strong> Friends
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="col-md-3">
                                    <small>Members in last 1 week</small>
                                    <h2 class="no-margins">42</h2>
                                    <div id="sparkline1"></div>
                                </div>


                            </div>

                            <div class="row">
                                <div class="col-lg-3">

                                    <div class="ibox">
                                        <div class="ibox-content">
                                            <h3>About @string.Format("{0}", User.Identity.Name)</h3>

                                            <p class="small">
                                                Holistically utilize competitive e-markets through intermandated meta-services. Objectively.
                                                <br />
                                                <br />
                                                More text
                                            </p>

                                            <p class="small font-bold">
                                                <span><i class="fa fa-circle text-navy"></i> Online status</span>
                                                 
                                                @*@Html.ActionLink("Update Team Leader", "TeamLeader", null, new { @class = "btn btn-primary btn-xs" })*@
                                            </p>
                                            
                                        </div>
                                    </div>
                                </div>

                            </div>
                            
                        }
                     </div>
                            </div>
                        }

                        <div id="tab-alerts" class="tab-pane">
                            <div class="panel-body">


                                <div class="row">

                                    <div class="ibox float-e-margins">
                                        <div class="ibox-title">
                                            <h5> Alerts</h5>
                                            <div class="ibox-tools">
                                                <a class="collapse-link">
                                                    <i class="fa fa-chevron-up"></i>
                                                </a>
                                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                                    <i class="fa fa-wrench"></i>
                                                </a>
                                                <ul class="dropdown-menu dropdown-user">
                                                    <li>
                                                        <a href="#">Config option 1</a>
                                                    </li>
                                                    <li>
                                                        <a href="#">Config option 2</a>
                                                    </li>
                                                </ul>
                                                <a class="close-link">
                                                    <i class="fa fa-times"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div class="ibox-content">
                                            @Html.Partial("_RenderAlerts", ViewBag.NotificationList as IEnumerable<TECIS.Data.Models.Notification>)
                                        </div>
                                    </div>
                                    <button class="btn btn-default print-btn"><i class="fa fa-print" onclick="print()"></i> Print</button>


                                </div>
                            </div>
                        </div>

                        <div id="tab-messages" class="tab-pane">
                            <div class="panel-body">
                                @Html.Partial("_RenderNotifications", ViewBag.NotificationList as IEnumerable<TECIS.Data.Models.Notification>)
                            </div>
                        </div>
                        <div id="tab-manage" class="tab-pane">
                            <div class="panel-body">
                                <div>
                                    <h4>Change your account settings</h4>
                                    <hr />
                                    <dl class="dl-horizontal">
                                        <dt>Password:</dt>
                                        <dd>
                                            [
                                            @if (Model.HasPassword)
                                {
                                @Html.ActionLink("Change your password", "ChangePassword")
                                }
                                else
                                {
                                @Html.ActionLink("Create", "SetPassword")
                                }
                                            ]
                                        </dd>
                                        <dt>External Logins:</dt>
                                        <dd>
                                            @Model.Logins.Count [
                                            @Html.ActionLink("Manage", "ManageLogins") ]
                                        </dd>
                                        @*
                            Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                             See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                                for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                             Uncomment the following block after you have set up two-factor authentication
                                        *@
                                        @*
                            <dt>Phone Number:</dt>
                            <dd>
                                @(Model.PhoneNumber ?? "None") [
                                @if (Model.PhoneNumber != null)
                                {
                                    @Html.ActionLink("Change", "AddPhoneNumber")
                                    @: &nbsp;|&nbsp;
                                    @Html.ActionLink("Remove", "RemovePhoneNumber")
                                }
                                else
                                {
                                    @Html.ActionLink("Add", "AddPhoneNumber")
                                }
                                ]
                            </dd>
                                        *@
                                        <dt>Two-Factor Authentication:</dt>
                                        <dd>
                                            <p>
                                                There are no two-factor authentication providers configured. @*See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                                    for details on setting up this ASP.NET application to support two-factor authentication.*@
                                            </p>
                                            @*@if (Model.TwoFactor)
                                {
                                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>Enabled
                                        <input type="submit" value="Disable" class="btn btn-link" />
                                        </text>
                                    }
                                }
                                else
                                {
                                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>Disabled
                                        <input type="submit" value="Enable" class="btn btn-link" />
                                        </text>
                                    }
                                }*@
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>
    </div>


</div>
@section topLevel{
    @{ Html.RenderPartial("_RenderNotifications.Modal"); }
}
@section Styles {

    @Styles.Render("~/plugins/switcheryStyles")

    @Styles.Render("~/plugins/imagecropperStyles")

}




@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/modalform")

    @Scripts.Render("~/plugins/imagecropper")
    @{ Html.RenderPartial("_RenderNotifications.js"); }

    <script type="text/javascript">
        $(document).ready(function () {

            $("#sparkline1").sparkline([34, 43, 43, 35, 44, 32, 44, 48], {
                type: 'line',
                width: '100%',
                height: '50',
                lineColor: '#1ab394',
                fillColor: "transparent"
            });
            var $image = $(".image-crop > img")
            $($image).cropper({
                aspectRatio: 1.618,
                preview: ".img-preview",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });

            var $inputImage = $("#inputImage");
            if (window.FileReader) {
                $inputImage.change(function () {
                    var fileReader = new FileReader(),
                            files = this.files,
                            file;

                    if (!files.length) {
                        return;
                    }

                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        fileReader.readAsDataURL(file);
                        fileReader.onload = function () {
                            $inputImage.val("");
                            $image.cropper("reset", true).cropper("replace", this.result);
                        };
                    } else {
                        showMessage("Please choose an image file.");
                    }
                });
            } else {
                $inputImage.addClass("hide");
            }

            $("#download").click(function () {
                window.open($image.cropper("getDataURL"));
            });

            $("#zoomIn").click(function () {
                $image.cropper("zoom", 0.1);
            });

            $("#zoomOut").click(function () {
                $image.cropper("zoom", -0.1);
            });

            $("#rotateLeft").click(function () {
                $image.cropper("rotate", 45);
            });

            $("#rotateRight").click(function () {
                $image.cropper("rotate", -45);
            });

            $("#setDrag").click(function () {
                $image.cropper("setDragMode", "crop");
            });

        });
        //$(function () {
        //    $('a[data-toggle="tab"]').on('shown', function (e) {
        //        //save the latest tab using a cookie:
        //        $.cookie('last_tab', $(e.target).attr('href'));
        //    });

        //    //activate latest tab, if it exists:
        //    var lastTab = $.cookie('last_tab');
        //    if (lastTab) {
        //        $('ul.nav nav-tabs').children().removeClass('active');
        //        $('a[href=' + lastTab + ']').parents('li:first').addClass('active');
        //        $('div.tab-content').children().removeClass('active');
        //        $(lastTab).addClass('active');
        //    }
        //});
    </script>
}
